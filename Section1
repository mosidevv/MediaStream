Building a Media Streaming Application
Intro
--Introducing MERN Mediastream
--Uploading videos to MongoDB GridFS
--Storing and retrieving media details
--Streaming videos from GridFS to a basic media player
--Listing, displaying, updating, and deleting media

Lecture 1:
Introducing MERN Mediastream::
--This will be a simple video streaming application that allows registered
users to upload videos that can be streamed by anyone browsing the application.
--We will add new React components to implement views for uploading a new video,
listing already posted media, modifying media post details, and displaying a video
where users can interact with the video content to stream and watch it. We will also
modify existing components such as the Home component so we can render a list of
popular videos and the Profile component so we can list all the videos that are
posted by a given user. These uploading and streaming capabilities in the application
will rely on the user's ability to upload video content.

Lecture 2:
Uploading and storing media::
--Registered users on the MERN Mediastream application will be able to upload videos
from their local files to store each video and related details directly on MongoDB
using GridFS. To enable uploading media content to the application, we need to
define how to store media details and the video content and implement a full-stack
slice that will let users create a new media post and upload a video file

Defining a Media model::
--We will implement a Mongoose model to define a Media model for storing the details
of each piece of media that's posted to the application.

--The Media schema in this model will have fields to record the media title,
description, genre, number of views, dates of when the media was posted and
updated, and a reference to the user who posted the media.

--The fields that were added to the schema definition will only store details about each
video that's posted to the application. In order to store the video content itself, we will
use MongoDB GridFS